<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on Saturday, April 09, 2016, 6:12 AM -->
<!-- MuClient version 4.94 -->

<!-- Plugin "Galabans_DoThen" generated by Plugin Wizard -->

<muclient>
<plugin
   name="Galabans_DoThen"
   author="Galaban"
   id="d2d75ad125b6cd1ba595aabf"
   language="Lua"
   purpose="Add Do and Then commands"
   save_state="y"
   date_written="2016-04-09 06:03:48"
   requires="4.72"
   version="1.0"
   >
<description trim="y">
<![CDATA[
Galaban's Do-Then plugin

This is a big plugin used to repeat a command or execute a command after the current long-running command executes

Usage:

#do <command>
#do 10 <command>
#then <command>

To stop auto-repeat use:
#stop

Examples:  install_camera ... #then hail hotel

Also included are some simple overrides for this:
#dig        will dig until you find something
#search     will search until you find something
#ponder     will continuously ponder

Entering the above commands again will stop the automatic process.

Also included:

#research <topic>
#study <topic>
#makearmor <armor>
#buildship <frame> <part> will keep building that ship
#autoslice     This will secure your ship.. Once secured, it starts slicing...and repeat.

Also:
#next    In certain areas, this will move your character from the current room to the next appropriate room

Uses:  Dac reefs, Tatooine carbon, Lorrd carvanium, and Coruscant gathering rooms,

FINAL NOTE:
The actions are not immediate. There is a delay to the repeat.

]]>
</description>

</plugin>


<!--  Get our standard constants -->

<include name="constants.lua"/>

<!--  Triggers  -->

<triggers>
  <trigger
   enabled="y"
   match="You find a file matching their information."
   send_to="12"
   sequence="100"
  >
  <send>keepDoing(2)
  </send>
  </trigger>

  <trigger
   enabled="y"
   match="Damn! Your datapad returns an error message!!"
   send_to="12"
   sequence="100"
  >
  <send>keepDoing(3)
  </send>
  </trigger>

  <trigger
   enabled="y"
   match="Damn, you must have entered the wrong data!"
   send_to="12"
   sequence="100"
  >
  <send>keepDoing(2)
  </send>
  </trigger>

  <trigger
   enabled="n"
   match="You mess up the tap!"
   send_to="12"
   sequence="100"
  >
  <send>Note("")
  -- There was a "beep1()" in here, but I dropped it since I'm moving this to a plugin
  -- Thought I would leave the trigger here in case someone else had use for it.
  </send>
  </trigger>

  <trigger
   custom_colour="17"
   match="You mess up your data. Now you have to start all over again..."
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>-- NOTE: Not waiting for us to stop. do it now
    keepDoing(3, 5, true)
  </send>
  </trigger>

  <trigger
   enabled="y"
   match="You find nothing."
   send_to="12"
   sequence="100"
  >
  <send>keepDoing(1)
  </send>
  </trigger>

  <trigger
   enabled="y"
   match="You finish changing the mode on the datapad."
   send_to="12"
   sequence="100"
  >
  <send>keepDoing(1)
  </send>
  </trigger>

  <trigger
   enabled="y"
   match="You finish diagnosing *"
   send_to="12"
   sequence="100"
  >
  <send>keepDoing(3,7)
  </send>
  </trigger>

  <trigger
   enabled="y"
   match="Gah, all your information was inconsequential, and out of sequence. Better try again."
   send_to="12"
   sequence="100"
  >
  <send>keepDoing(2,7)
  </send>
  </trigger>

  <trigger
   enabled="y"
   match="You finish modifying the ship."
   send_to="12"
   sequence="100"
   script="shipBuildSuccess"
  >
  </trigger>

  <trigger
   enabled="y"
   group="MakeCanteen"
   match="You need duraplast or durasteel for the shell."
   send_to="12"
   sequence="100"
   script="stopDoing"
  >
  </trigger>

  <trigger
   enabled="y"
   group="Ponder"
   match="You ponder for some time, and things seem clearer."
   send_to="12"
   sequence="100"
  >
  <send>keepDoing(2)
  </send>
  </trigger>

  <trigger
   enabled="y"
   group="Ponder"
   match="You ponder for some time, but fail to figure anything out."
   send_to="12"
   sequence="100"
  >
  <send>keepDoing(2)
  </send>
  </trigger>

  <trigger
   enabled="y"
   group="MakeArmor"
   match="You finish working on *"
   send_to="12"
   sequence="100"
  >
  <send>keepDoing(3)
  </send>
  </trigger>

  <trigger
   enabled="y"
   group="ShipBuilding"
   match="Where to begin? It all looks so complex..."
   send_to="12"
   sequence="100"
   script="doAgain"
  >
  </trigger>

  <trigger
   enabled="y"
   group="Research"
   match="You finish your studies and feel much more skilled."
   send_to="12"
   sequence="100"
  >
  <send>keepDoing(2, 6)
  </send>
  </trigger>

  <trigger
   enabled="y"
   group="Crafting"
   match="You finish your work and *"
   send_to="12"
   sequence="100"
  >
  <send>keepDoing(1, 8)
  </send>
  </trigger>

  <trigger
   enabled="y"
   group="Slicer"
   match="The ship is no longer secured."
   send_to="12"
   sequence="100"
  >
  <send>Note("Auto-slice disabled.")
    stopDoing()
    if (tmpAutoSlice) then
        shipSliced()
    else
        Note("Auto-slicer not enabled.  Use #autoslice to enable it")
    end
</send>
  </trigger>

  <trigger
   enabled="y"
   group="LegalBot"
   match="Your two hours begins now. If, for any reason, you need to pause botting *"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("varLegalBotting", "1")</send>
  </trigger>

  <trigger
   enabled="y"
   group="LegalBot"
   match="Botting paused. You have * remaining."
   send_to="12"
   sequence="100"
  >
<send>SetVariable("varLegalBotting","0")
stopAllAutoRepeat()
</send>
  </trigger>

  <trigger
   enabled="y"
   group="LegalBot"
   match="You must raise your science level before learning more about this knowledge."
   send_to="12"
   sequence="100"
  >
<send>SetVariable("varLegalBotting","0")
stopAllAutoRepeat()
</send>
  </trigger>

  <trigger
   enabled="y"
   group="LegalBot"
   match="You must turn off AFK first! Type AFK to toggle it off."
   send_to="12"
   sequence="100"
  >
<send>SetVariable("varLegalBotting","0")
stopAllAutoRepeat()
</send>
  </trigger>

  <trigger
   enabled="y"
   group="LegalBot"
   match="You must wait 30 mins before botting again."
   send_to="12"
   sequence="100"
  >
<send>SetVariable("varLegalBotting","0")
stopAllAutoRepeat()
</send>
  </trigger>

  <trigger
   enabled="y"
   group="LegalBot"
   match="You must wait 30 mins to bot again."
   send_to="12"
   sequence="100"
  >
<send>SetVariable("varLegalBotting","0")
stopAllAutoRepeat()
</send>
  </trigger>

  <trigger
   custom_colour="17"
   group="Develop"
   match="You spend hours developing but make no breakthroughs."
   send_to="12"
   sequence="100"
   other_text_colour="white"
  >
  <send>-- NOTE: Not waiting for us to stop. do it now
    keepDoing(3,6,true)
  </send>
  </trigger>

  <trigger
   enabled="y"
   group="Slicer"
   match="The ship is now secured to*"
   send_to="12"
   sequence="100"
  >
  <send>Note("Auto-slice disabled.")
stopDoing()

    if (tmpAutoSlice) then
        shipSecure()
    else
        Note("Auto-slicer not enabled.  Use #autoslice to enable it")
    end
</send>
  </trigger>

  <trigger
   enabled="y"
   group="Research"
   match="You study for hours on end, but fail to gather any knowledge."
   send_to="12"
   sequence="100"
  >
  <send>keepDoing(2, 4)
  </send>
  </trigger>

  <trigger
   enabled="y"
   group="Study"
   match="You study it for some time, but fail to learn anything about it."
   send_to="12"
   sequence="100"
  >
  <send>keepDoing(2)
  </send>
  </trigger>

  <trigger
   enabled="y"
   group="MakeBOT"
   match="You can't get it to start working."
   send_to="12"
   sequence="100"
   script="doAgain"
  >
  </trigger>

  <trigger
   enabled="y"
   group="LocateShip"
   match="You were unable to locate any records on the target ship."
   send_to="12"
   sequence="100"
  >
  <send>keepDoing(5)
  </send>
  </trigger>

  <trigger
   enabled="y"
   group="Cameras"
   match="You were unable to pick up any cameras."
   send_to="12"
   sequence="100"
  >
  <send>keepDoing(2, 5)
  </send>
  </trigger>

  <trigger
   enabled="y"
   group="MakeMedpac"
   match="You will need a liquid container to help dress wounds."
   send_to="12"
   sequence="100"
   script="stopDoing"
  >
  </trigger>

  <trigger
   enabled="y"
   group="ShipBuilding"
   match="Your * doesn't need any more of that."
   send_to="12"
   sequence="100"
   script="stopDoing"
  >
  </trigger>

  <trigger
   enabled="y"
   group="Dig"
   match="Your dig uncovered nothing."
   send_to="12"
   sequence="100"
  >
  <send>keepDoing(1)
  </send>
  </trigger>

  <trigger
   enabled="y"
   group="Slicer"
   match="You can't remember how to start."
   send_to="12"
   sequence="100"
  >
  <send>keepDoing(3)
  </send>
  </trigger>

  <trigger
   enabled="y"
   group="Cameras"
   match="You can't seem to call up the right info on the datapad."
   send_to="12"
   sequence="100"
   script="doAgain"
  >
  </trigger>

  <trigger
   enabled="y"
   group="Slicer"
   match="You can't seem to call up the right information on the datapad!"
   send_to="12"
   sequence="100"
   script="doAgain"
  >
  </trigger>

  <trigger
   enabled="y"
   expand_variables="y"
   group="Search"
   match="Your search reveals *"
   send_to="12"
   sequence="100"
  >
  <send>Note("Auto-search disabled.")

if ("%1" == "A handful of illuminated plankton!") then
   Send("get plankton")
elseif ("%1" == "a chunk of carbon!") then
   Send("get carbon")
elseif (string.find("%1", "camera")) then
   Send("get camera")
end

stopDoing()
</send>
  </trigger>

  <trigger
   enabled="y"
   group="MedicalBOT"
   match="You don't know where to start."
   send_to="12"
   sequence="100"
   script="doAgain"
  >
  </trigger>

  <trigger
   enabled="y"
   group="MakeBOT"
   match="...It explodes into a ball of fire!"
   send_to="12"
   sequence="100"
   script="stopDoing"
  >
  </trigger>

  <trigger
   enabled="y"
   group="MakeBOT"
   match="...and it falls apart in your hands."
   send_to="12"
   sequence="100"
   script="stopDoing"
  >
  </trigger>


  <trigger
   enabled="y"
   group="MakeBOT"
   match="^You can\'t figure out (how to fit the parts together|what to do)\.$"
   regexp="y"
   send_to="12"
   sequence="100"
   script="doAgain"
  >
  </trigger>

  <trigger
   enabled="y"
   expand_variables="y"
   group="Dig"
   match="^Your dig uncovered (some|a|Raw) (.*?)$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (string.find("%0","carvanium")) then
   Send("get carv")
end
if (string.find("%0","gem")) then
   Send("get gem")
end
if (string.find("%0","ore")) then
   Send("get ore")
end

Note("Auto-digging disabled.")
stopDoing()
</send>
  </trigger>

  <trigger
   enabled="y"
   group="Research"
   match="You can't learn any more about that from books!"
   send_to="12"
   sequence="95"
   script="stopDoing"
  >
  </trigger>

  <trigger
   enabled="y"
   group="Slicer"
   match="You fail to secure the ship."
   send_to="12"
   sequence="100"
  >
  <send>keepDoing(1)
  </send>
  </trigger>

  <trigger
   enabled="y"
   group="Slicer"
   match="Account locked. Your datapad reminds you not to hack it to find out."
   send_to="12"
   sequence="100"
  >
  <send>keepDoing(4)
  </send>
  </trigger>

  <trigger
   enabled="y"
   group="Study"
   match="After some time studying you feel you know more."
   send_to="12"
   sequence="100"
  >
  <send>keepDoing(2)
  </send>
  </trigger>

  <trigger
   enabled="y"
   group="MakeArmor"
   match="You hold up your finished piece of *!"
   send_to="12"
   sequence="100"
   script="stopDoing"
  >
  </trigger>

  <trigger
   enabled="y"
   group="LocateShip"
   match="You manage to locate a record on the target vessel..."
   send_to="12"
   sequence="100"
  >
  <send>keepDoing(5)
  </send>
  </trigger>

  <trigger
   enabled="y"
   group="Slicer"
   match="You fail to slice the ship's computer!"
   send_to="12"
   sequence="100"
  >
  <send>keepDoing(1)
  </send>
  </trigger>

  <trigger
   enabled="y"
   group="Remodulate"
   match="As you finish, you realize your modulation attempts were ineffective! Better try again."
   send_to="12"
   sequence="100"
  >
  <send>keepDoing(1)
  </send>
  </trigger>

  <trigger
   custom_colour="15"
   enabled="y"
   group="Cameras"
   match="You find a camera and uninstall it."
   send_to="12"
   sequence="100"
   script="stopDoing"
  >
  </trigger>

  <trigger
   enabled="y"
   group="_Combat"
   match="* begins to moving towards you."
   send_to="12"
   sequence="100"
   script="setInterruption"
  >
  </trigger>

  <trigger
   enabled="y"
   group="_Combat"
   match="You can't go that way, * is blocking that exit."
   send_to="12"
   sequence="100"
   script="setInterruption"
  >
  </trigger>

  <trigger
   enabled="y"
   group="_Combat"
   match="You can't go that way, * is blocking that exit."
   send_to="12"
   sequence="100"
   script="setInterruption"
  >
  </trigger>

  <trigger
   enabled="y"
   expand_variables="y"
   group="Alerts"
   match="^(.*) (slithers in|arrives) from (.*)\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (ignoreMob("%1") == false) then
    setInterruption()
end
</send>
  </trigger>

  <trigger
   enabled="y"
   group="Alerts"
   match="* arrives on a speederbike, gets off and pays the driver before it leaves."
   send_to="12"
   sequence="100"
   script="setInterruption"
  >
  </trigger>

  <trigger
   enabled="y"
   group="Alerts"
   match="A titanic, *"
   send_to="12"
   sequence="100"
   script="setInterruption"
  >
  </trigger>

  <trigger
   enabled="y"
   group="AlertsHigh"
   match="( IMM | CHAT )*"
   send_to="12"
   sequence="100"
   script="setInterruption"
  >
  </trigger>

  <trigger
   enabled="y"
   group="AlertsHigh"
   match="* forces you to '*'."
   send_to="12"
   sequence="100"
   script="setInterruption"
  >
  </trigger>

  <trigger
   enabled="y"
   group="AlertsHigh"
   match="* has transferred you."
   send_to="12"
   sequence="100"
   script="setInterruption"
  >
  </trigger>
</triggers>


<!--  Aliases  -->

<aliases>

  <alias
   match="#do *"
   enabled="y"
   expand_variables="y"
   send_to="12"
   sequence="100"
  >
  <send>local firstWord = string.gmatch("%1", "([^ ]+)")()

    local command = "%1"
    if tonumber(firstWord) ~= nil then
         if (tonumber(firstWord) < 1) then
            Note("Umm... no. You ahve to use a positive count for #do N command")
            return
         end
         command = command:sub(string.len(firstWord)+2)
         SetVariable("tmpVarRepeatCount", tonumber(firstWord))
         Note("Doing &lt;"..command.."&gt; for &lt;"..firstWord.."&gt; times")
    end

    SetVariable("varRepeatCommand", command)
    
    Send(command)
  </send>
  </alias>

  <alias
   match="#do"
   enabled="y"
   send_to="12"
   sequence="100"
  >
  <send>--@RLA
    local interrupted = GetVariable("tmpVarInterrupt")
    DeleteVariable("tmpVarInterrupt")

    local cmd = GetVariable("varRepeatCommand")
    if (interrupted ~= nil) then
        Note("[Interruption removed]")
        if (cmd ~= "" and cmd ~= nil) then
              Note("[Resuming]: "..cmd)
        end
    else
        Note("There was no interruption.  Continuing on to do: "..cmd)
    end
    keepDoing(1)

  </send>
  </alias>
  <alias
   match="#stop"
   enabled="y"
   group="bot"
   send_to="12"
   sequence="100"
  >
  <send>stopAllAutoRepeat()
    Note("Cleared.")
  </send>
  </alias>

  <alias
   match="#then"
   enabled="y"
   expand_variables="y"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("varThen","")
Note("Delayed action cleared.")</send>
  </alias>

  <alias
   match="#then *"
   enabled="y"
   expand_variables="y"
   send_to="12"
   sequence="100"
  >
  <send>local val = string.gsub("%1","\'","")

SetVariable("varThen","Execute('"..val.."')")
Note("Delaying: "..val)</send>
  </alias>
  <alias
   match="timestamp"
   enabled="y"
   send_to="12"
   sequence="100"
  >
  <send>--used in triggers and such... do not remove
Note(os.date ("%x %X"))</send>
  </alias>

  <alias
   match="#next"
   enabled="y"
   send_to="12"
   sequence="100"
  >
  <send>doNext()</send>
  </alias>

  <alias
   match="#buildship * *"
   enabled="y"
   expand_variables="y"
   group="ShipBuilding"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("varRepeatCommand", "buildship %1 %2")
    SetVariable("varShipBuildPart", "%2")
    
    Send("get %2")
    local part = "%2"
    if (part == "engine") then
        part = "engines"
    end
    Send("buildship %1 "..part)</send>
  </alias>

  <alias
   match="#autoslice"
   enabled="y"
   send_to="12"
   sequence="100"
  >
  <send>if (tmpAutoSlice) then
        Note("Auto-slicer disabled.")
        tmpAutoSlice = false
        stopDoing()
    else
        tmpAutoSlice = true
        Note("Auto-slicer enabled.")
        Execute("#do secure ship")
    end
    </send>
  </alias>

  <alias
   match="#dig"
   enabled="y"
   send_to="12"
   sequence="100"
  >
  <send>local val = GetVariable("varRepeatCommand")
    
    if (val ~= nil and val ~= "") then
        stopAllAutoRepeat()
        Note("Auto-digging disabled.")
    else
        SetVariable("varRepeatCommand","dig")
        Send("dig")
        Note("Auto-digging enabled.")
    end
    </send>
  </alias>

  <alias
   match="#search"
   enabled="y"
   send_to="12"
   sequence="100"
  >
  <send>local val = GetVariable("varRepeatCommand")

if (val ~= nil and val ~= "") then
    stopAllAutoRepeat()
    Note("Auto-search disabled.")
else
    SetVariable("varRepeatCommand","search")
    Send("search")
    Note("Auto-search enabled.")
end
</send>
  </alias>

  <alias
   match="#ponder"
   enabled="y"
   send_to="12"
   sequence="100"
  >
  <send>local val = GetVariable("varRepeatCommand")
    
    if (val ~= nil and val ~= "") then
        stopAllAutoRepeat()
        Note("Auto-Ponder disabled.")
    else
        SetVariable("varRepeatCommand","ponder")
        Send("ponder")
        Note("Auto-Ponder enabled.")
    end
  </send>
  </alias>

  <alias
   match="#study"
   enabled="y"
   group="Research"
   send_to="12"
   sequence="100"
  >
  <send>stopAllAutoRepeat()
Note("Cleared.")</send>
  </alias>
  <alias
   match="#study *"
   enabled="y"
   expand_variables="y"
   group="Research"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("varRepeatCommand", "study ".."%1")
Send("study ".."%1")</send>
  </alias>

  <alias
   match="#makearmor *"
   enabled="y"
   expand_variables="y"
   group="Research"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("varRepeatCommand", "makearmor ".."%1")

Send("makearmor ".."%1")</send>
  </alias>

  <alias
   match="#makearmor"
   enabled="y"
   expand_variables="y"
   group="Research"
   send_to="12"
   sequence="100"
  >
  <send>stopAllAutoRepeat()
    Note("Auto-makearmor stopped.  Use #makearmor &gt;armor&lt; to start it.")
  </send>
  </alias>

  <alias
   match="#research"
   enabled="y"
   group="Research"
   send_to="12"
   sequence="100"
  >
  <send>stopAllAutoRepeat()
Note("Auto-research stopped.  Use #research &gt;subject&lt; to start it.")
</send>
  </alias>
  <alias
   match="#research *"
   enabled="y"
   expand_variables="y"
   group="Research"
   send_to="12"
   sequence="100"
  >
  <send>SetVariable("varRepeatCommand", "research ".."%1")

Send("research ".."%1")</send>
  </alias>

</aliases>

<!--  Script  -->


<script>
<![CDATA[

-------------------------------
--  GLOBALS
-------------------------------

local b_black = ANSI(1)..ANSI(30)
local d_black = ANSI(22)..ANSI(30)
local b_red = ANSI(1)..ANSI(31)
local d_red = ANSI(22)..ANSI(31)
local b_green = ANSI(1)..ANSI(32)
local d_green = ANSI(22)..ANSI(32)
local b_yellow = ANSI(1)..ANSI(33)
local d_yellow = ANSI(22)..ANSI(33)
local b_blue = ANSI(1)..ANSI(34)
local d_blue = ANSI(22)..ANSI(34)
local b_magenta = ANSI(1)..ANSI(35)
local d_magenta = ANSI(22)..ANSI(35)
local b_cyan = ANSI(1)..ANSI(36)
local d_cyan = ANSI(22)..ANSI(36)
local b_white = ANSI(1)..ANSI(37)
local d_white = ANSI(22)..ANSI(37)

tmpAutoSlice = false

-------------------------------
--  Plugin Events
-------------------------------
function OnPluginInstall()
    --make sure these are cleared!
    stopAllAutoRepeat()
end

function OnPluginDisconnect()
    --make sure these are cleared!
    stopAllAutoRepeat()
end

function OnPluginEnable()
    --make sure these are cleared!
    stopAllAutoRepeat()
end

function BroadcastMessage(command)
    local bot = GetVariable("varLegalBotting")

    if (bot) then
        BroadcastPlugin(17, command)
    else
        BroadcastPlugin(16, command)
    end
end

-------------------------------
-- FILTERS
-------------------------------
-- This is when a mob arrives or is standing there.
function ignoreMob(stringInput)
   local cmpVal = string.lower(stringInput)

   if (string.find(cmpVal, "citizen") ~= nil or
        string.find(cmpVal, "nerf") ~= nil or
        string.find(cmpVal, "tadesco") ~= nil or
        string.find(cmpVal, "spice runner") ~= nil or
        string.find(cmpVal, "spicer") ~= nil or
        string.find(cmpVal, "astromech") ~= nil or
        string.find(cmpVal, "guard") ~= nil or
        string.find(cmpVal, "lobbyist") ~= nil or
        string.find(cmpVal, "resident") ~= nil or
        string.find(cmpVal, "abrian jax") ~= nil or
        string.find(cmpVal, "mollusk") ~= nil or
        string.find(cmpVal, "officer") ~= nil or
        string.find(cmpVal, "alderaanian rose") ~= nil or
        string.find(cmpVal, "medic") ~= nil or
        string.find(cmpVal, "quillarat") ~= nil or
        string.find(cmpVal, "politician") ~= nil or
        string.find(cmpVal, "jawa construction") ~= nil or
        string.find(cmpVal, "tattooed wroonian") ~= nil or
        string.find(cmpVal, "k-lt4") ~= nil or
        string.find(cmpVal, "the infamous gambler, bartho galliant") ~= nil or
        string.find(cmpVal, "a small, brown robed jawa") ~= nil or
        string.find(cmpVal, "an adult dewback") ~= nil or
        string.find(cmpVal, "a womp rat") ~= nil or
        string.find(cmpVal, "a furry bantha") ~= nil or
        string.find(cmpVal, "a green skinned Rodian male") ~= nil or
        string.find(cmpVal, "a chunk of carbon") ~= nil or
        string.find(cmpVal, "droid") ~= nil) then
            return true
    end
    return false

end

-------------------------------
--  GENERIC UTILITIES
-------------------------------

function DoAfterRandom2(delay, maxdelay, command)
    local bot = GetVariable("varLegalBotting")

    if(bot == "1") then
        Note("Sending "..command)
        Send(command)
    else
        local rand = delay
        if (maxdelay ~= nil and maxdelay > delay) then
            local range = (maxdelay - delay)
            rand = delay + math.random() * range
        else
            rand = delay + math.random() * delay
        end
        DoAfter(rand, command)
    end
end

function DoAfterRandom(delay, command)
    DoAfterRandom2(delay, nil, command)
end


function DoAfterSpecialRandom2(delay, maxdelay, command)
    local rand = delay
    if (maxdelay ~= nil and maxdelay > delay) then
        local range = (maxdelay - delay)
        rand = delay + math.random() * range
    else
        rand = delay + math.random() * delay
    end

    DoAfterSpecial(rand, command, 12)
end

function DoAfterSpecialRandom(delay, command)
    local rand = math.random() * delay + delay
    DoAfterSpecial(rand, command, 12)
end

function randomAction(delay)

    local switch = math.random() * 14;
    
    local action = "score time"
    if (switch < 1) then
        action = "inv"
    elseif (switch < 2) then
        action = "level"
    elseif (switch < 3) then
        action = "score level"
    elseif (switch < 4) then
        action = "prac science"
    elseif (switch < 5) then
        action = "prac engineering"
    elseif (switch < 6) then
        action = "eq"
    elseif (switch < 7) then
        action = "score time"
    elseif (switch < 8) then
        action = "prac piloting"
    elseif (switch < 9) then
        action = "prac combat"
    elseif (switch < 10) then
        action = "slist piloting"
    elseif (switch < 11) then
        action = "prac slicer"
    elseif (switch < 12) then
        action = "slist slicer"
    elseif (switch < 13) then
        action = "score time"
    else
        action = "save"
    end

    local rand = math.random() * delay + delay
    DoAfter(rand, action)

    if ((math.random() * 5) < 1) then
        randomAction(delay)
    end

end

-- ripped off somewhere else... (oh no, so sue me.)
function getMSDPVal(fieldname)
    if not IsConnected() then
        return ""
    end
    
    assert (fieldname, "nil fieldname passed to getmsdp()")
    
    rc, result = CallPlugin("b3aae34498d5bf19b5b2e2af","msdpval",fieldname)
    
    if result ~= nil then
        return result
    else
        return ""
    end
end


-------------------------
--  Interruption code
--
function setInterruption()
    BroadcastMessage("setinterruption")
    local val = GetVariable("varRepeatCommand")

    -- Allow interruptions while botting?
    --local bot = GetVariable("varLegalBotting")
    --if (bot == "1") then
        --return
    --end

    if (val ~= nil and val ~= "") then
        SetVariable("tmpVarInterrupt","1")
        Note("[---- ACTION INTERRUPTED ---]")
    end
end

function checkInterrupt()
    local interruption = GetVariable("tmpVarInterrupt")
    if (interruption ~= nil and interruption ~= "") then
        Note("ACTION ABORTED.  You've been Interrupted")
        Note("USE #do to continue")
        BroadcastMessage("actioninterrupted")
        return true
    end
    return false
end

--------------------------
--  Auto-Repeat code
--

function keepDoing(delay, maxdelay, executeDelayedNow)
    local varID = "varRepeatCommand"
    local val = GetVariable(varID)
    local bot = GetVariable("varLegalBotting")

    BroadcastMessage("docomplete")

    if (checkInterrupt()) then
        return
    end

    checkDelayedAction(executeDelayedNow)

    local sRepeatCount = GetVariable("tmpVarRepeatCount")
    local repcount = -1
    if (sRepeatCount ~= nil and sRepeatCount ~= "") then
        repcount = tonumber(sRepeatCount)
        repcount = repcount - 1
        SetVariable("tmpVarRepeatCount", repcount)
        if (repcount == 0) then
            Note("Auto-limit reached.  Stopping Repeat Command")

            stopDoing()
            return
        end
        Note("Continue for "..repcount.." more times.")
    end

    if (delay == 0 or delay == nil) then
        if (val ~= nil and val ~= "") then
            Execute(val)
        end
        return
    elseif (val ~= nil and val ~= "") then
        DoAfterSpecialRandom2(delay, maxdelay, "Execute('"..val.."')")

        local check = math.random() * 4;
        if (check < 1 and bot == "0" and val ~= "dig" and val ~= "search") then
            randomAction(delay * 2)
        end
    end

end

function stopDoing()
    BroadcastMessage("stopdoing")
    stopAllAutoRepeat()
    checkDelayedAction()
end

function doAgain()

    BroadcastMessage("doagain")
    local action = GetVariable("varRepeatCommand")

    -- Special case where we want to execute it now without processing
    -- counts and such.... just send it again.
    if (action ~= nil and action ~= "") then
        DoAfter((math.random()*1)+0.5, action)
    end
end


function stopAllAutoRepeat()
    BroadcastMessage("stopall")
    SetVariable("varRepeatCommand","")
    SetVariable("varShipBuildPart","")
    DeleteVariable("tmpVarRepeatCount")
end


function checkDelayedAction(executeNow)
    repeatVar = "varRepeatCommand"

    -- Note: We call this function before any "repeater" functions.  
    -- However, the delay at the bottom of this, screws all that up. 
    -- So, the "then" applies to after the ->repeater<- function completes.
    -- To solve this, we only delay the "then" function by 0.5 seconds
    -- All the "do functions are delayed by 1+ second.
    if (executeNow == true) then
        local rep = GetVariable(repeatVar)
        if (rep ~= nil and rep ~= "") then
          return
        end
    end

    -- If we were interrupted, bail.
    if (checkInterrupt()) then
        return
    end

    local bot = GetVariable("varLegalBotting")
    
    local val = GetVariable("varThen")
    if (val == nil or val == "") then
      return
    end
    
    --Only do it once (clear the variable)
    SetVariable("varThen","")
    
    --If we are legally botting, then just execute it now, no delay.
    if(bot == "1") then
        f = loadstring(val)
        f()
        return
    end
    
    --Otherwise, wait half a second.
    DoAfterSpecial(0.5,val,12)

end

function haveDelayedAction()
   local val = GetVariable("varThen")
   if (val == nil or val == "") then
      return false
   end
    return true
end

-- ripped off somewhere else... (oh no! ...sue me.)
function getMSDPVal(fieldname)
    if not IsConnected() then
        return ""
    end
    
    assert (fieldname, "nil fieldname passed to getmsdp()")
    
    rc, result = CallPlugin("b3aae34498d5bf19b5b2e2af","msdpval",fieldname)
    
    if result ~= nil then
        return result
    else
        return ""
    end
end



-----------------------
-- SHIP BUILDING
-----------------------

function shipBuildSuccess()

    -- If we have a delayed action (then command), we want to 
    -- delay the "get" command long enough so that the "#then" can execute (0.5 sec delay)
    local delay = 1
    if (haveDelayedAction()) then
        delay = 1.5
        Note("Delaying next part...")
    end

    local part = GetVariable("varShipBuildPart")
    local cmd = GetVariable("varRepeatCommand")

    if (cmd == nil or cmd == "" or part == nil or part == "") then
        Note("Ship building not enabled")
        return
    end

    if (delay == 0) then    --sanity
        Send("get "..part)
    else
        DoAfterRandom(delay,"get "..part)
        delay = delay + 1
    end

    keepDoing(delay, delay * 2, true)

end


-------------------------
-- GATHERING / AUTO-MOVE
-------------------------
-- Plankton

function planktonNext(currRoom)
    
    if (currRoom == "" or currRoom == nil) then
        Note("[PLANKTON] No current room.")
        return false
    end

    --local speed = GetVariable("tmpVarForceSpeed")
    --if ((speed == nil or speed == "0")) then
        --Execute("speed")
    --end

    --
    if (currRoom == "37236") then
        Send("get coral")
        Send("w")
        Send("w")
    elseif (currRoom == "37234") then
        Send("nw")
        Send("w")
        Send("w")
    elseif (currRoom == "37203") then
        Send("n")
        Send("d")
        Send("s")        
    elseif (currRoom == "37206") then
        Send("sw")
        Send("w")

    elseif (currRoom == "37247") then
        Send("e")
        Send("ne")
        Send("se")
        Send("se")
        Send("s")
        Send("sw")
        Send("w")
        Send("se")
        Send("se")
        Send("e")
    elseif (currRoom == "37230") then
        Execute("w;nw;nw;w;d;n;n;w;w")
    elseif (currRoom == "37225") then
        Send("e")
        Send("e")
        Send("ne")
        Send("e")
        Send("nw")
        Send("n")
    elseif (currRoom == "37223") then
        Send("s")
        Send("se")
        Send("e")
        Send("ne")
        Send("ne")
    elseif (currRoom == "37223") then
        Send("s")
        Send("se")
        Send("e")
        Send("ne")
        Send("ne")
    elseif (currRoom == "37220") then
        Execute("sw;sw;w;w;sw;s;s;u;e;e;ne;n;nw;nw;n;u;s")
    else
        return false
    end

    return true
end

------------------------
--  CARBON NEXT
--
function carbonNext(currRoom)

    if (currRoom == "" or currRoom == nil) then
        Note("[PLANKTON] No current room.")
        return false
    end

    local carbonCmd = "get carbon"  --or  "#search"
    
    if (currRoom == "12410" or currRoom == "12411") then
        Send("se")
        
        Execute(carbonCmd)
    elseif (currRoom == "12412" or currRoom == "12416") then
        Send("s")
        Execute(carbonCmd)
    elseif (currRoom == "12413") then
        Send("s")
        Send("ne")
        Execute(carbonCmd)
    elseif (currRoom == "12391") then
        Send("ne")
        Execute(carbonCmd)
    elseif (currRoom == "12392") then
        Send("sw")
        Send("sw")
        Send("s")
        Execute(carbonCmd)
    elseif (currRoom == "12415" or currRoom == "12417") then
        Send("sw")
        Execute(carbonCmd)
    elseif (currRoom == "12418") then
        -- Note: This requires the improved LOTJ Mapper plugin...
        -- If you don't have it, screw you.
        Execute("mapper goto 12410")
    else
        return false
    end
    return true
end


function carvaniumNext(currRoom)

    if (currRoom == "2046") then
        Execute("w;s;sw;#dig")
    elseif (currRoom == "2043") then
        Execute("sw;s;s;#dig")
    elseif (currRoom == "2033") then
        Execute("e;s;s;e;e;#dig")
    elseif (currRoom == "2069") then
        Execute("e;n;n;#dig")
    elseif (currRoom == "2068") then
        Execute("n;e;se;s;s;s;s;#dig")
    elseif (currRoom == "2061") then
        Execute("s;w;nw;n;n;w;w;w;#dig")
    elseif (currRoom == "2030") then
        Execute("s;s;s;w;w;w;w;w;#dig")
    elseif (currRoom == "2022") then
        Execute("n;n;ne;n;n;n;n;#dig")
    elseif (currRoom == "2015") then
        Execute("n;n;n;ne;e;e;n;u;u;u;u;w")
    else
        return false
    end

   return true
end

function coruscantTrainingNext(currRoom)

    if (currRoom == "3593") then
        Execute("sw;nw;nw;nw;sw;get datadisk")
    elseif (currRoom == "3680") then
        Execute("u;ne;ne;e;get crate")
    elseif (currRoom == "3684") then
        Execute("w;sw;sw;d;sw")
    elseif (currRoom == "3648") then
        Execute("ne;ne;ne;'chemicals")
    -- espionage / plaza
    elseif (currRoom == "2426") then
        Execute("s;w;s;s;s;w;give camera kevron")
    else
        return false
    end
    return true
end

------------------------
--  NEXT
--
function doNext()
    --This is a very, VERY, very generic function
    -- This is used for plankton, nerf herding, etc.

    if(checkInterrupt()) then
        return
    end

    local currRoom = getMSDPVal("ROOMVNUM")
    if (currRoom == "") then
        Note("Unable to move to next room... Is the MSDP plugin installed?")
    end

    if (coruscantTrainingNext(currRoom)) then
        return
    end
    if(planktonNext(currRoom)) then
        return
    end
    if (carbonNext(currRoom)) then
        return
    end
    if (carvaniumNext(currRoom)) then
        return
    end

    Note("Unknown NEXT action for VNUM: ["..currRoom.."]")
    return
end



------------------------
--  Autoslice
function shipSecure()
    DoAfterSpecial(0.5,'AnsiNote("'..b_magenta..'Continuing on to slice the ship...")',12)
    DoAfterSpecial(3,"Execute('do slice ship')",12)
end

function shipSliced()
    DoAfterSpecial(0.5,'AnsiNote("'..b_magenta..'Continuing on to secure the ship...")',12)
    DoAfterSpecial(3,"Execute('do secure ship')",12)
end


]]>
</script>


<!--  Plugin help  -->

<aliases>
  <alias
   script="OnHelp"
   match="Galabans_DoThen:help"
   enabled="y"
  >
  </alias>
</aliases>

<script>
<![CDATA[
function OnHelp ()
  world.Note (world.GetPluginInfo (world.GetPluginID (), 3))
end
]]>
</script> 

</muclient>
